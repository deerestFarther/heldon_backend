<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.heldon.dao.AuthorizationDao">
    <resultMap id="BaseMap" type="com.heldon.entity.Authorization">
        <id column="auth_id" property="authId" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="credentials" property="credentials" jdbcType="VARCHAR"/>
        <result column="identifier" property="identifier" jdbcType="VARCHAR"/>
        <result column="identity_type" property="identityType" jdbcType="INTEGER"/>
        <result column="lastlogin_time" property="lastloginTime" jdbcType="TIMESTAMP"/>
        <result column="lastlogin_ip" property="lastloginIp" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="is_delete" property="isDelete" jdbcType="BIT"/>
        <result column="ext1" property="ext1" jdbcType="INTEGER"/>
        <result column="ext2" property="ext2" jdbcType="INTEGER"/>
        <result column="ext3" property="ext3" jdbcType="VARCHAR"/>
        <result column="ext4" property="ext4" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="BaseColumns">
      a.auth_id, a.user_id, a.credentials, a.identifier, a.identity_type, a.lastlogin_time, 
      a.lastlogin_ip, a.create_time, a.is_delete, a.ext1, a.ext2, a.ext3, a.ext4
    </sql>
    <insert id="insert" parameterType="com.heldon.entity.Authorization">
        insert into authorization
          (auth_id, user_id, credentials, identifier, identity_type, lastlogin_time, lastlogin_ip, 
          create_time, is_delete, ext1, ext2, ext3, ext4)
        values
          (#{authId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{credentials,jdbcType=VARCHAR}, 
          #{identifier,jdbcType=VARCHAR}, #{identityType,jdbcType=INTEGER}, #{lastloginTime,jdbcType=TIMESTAMP}, 
          #{lastloginIp,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=BIT}, 
          #{ext1,jdbcType=INTEGER}, #{ext2,jdbcType=INTEGER}, #{ext3,jdbcType=VARCHAR}, #{ext4,jdbcType=VARCHAR}
          )
    </insert>
    <insert id="insertSelective" parameterType="com.heldon.entity.Authorization">
        insert into authorization
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="authId != null">
                auth_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="credentials != null">
                credentials,
            </if>
            <if test="identifier != null">
                identifier,
            </if>
            <if test="identityType != null">
                identity_type,
            </if>
            <if test="lastloginTime != null">
                lastlogin_time,
            </if>
            <if test="lastloginIp != null">
                lastlogin_ip,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="ext1 != null">
                ext1,
            </if>
            <if test="ext2 != null">
                ext2,
            </if>
            <if test="ext3 != null">
                ext3,
            </if>
            <if test="ext4 != null">
                ext4,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="authId != null">
                #{authId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="credentials != null">
                #{credentials,jdbcType=VARCHAR},
            </if>
            <if test="identifier != null">
                #{identifier,jdbcType=VARCHAR},
            </if>
            <if test="identityType != null">
                #{identityType,jdbcType=INTEGER},
            </if>
            <if test="lastloginTime != null">
                #{lastloginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastloginIp != null">
                #{lastloginIp,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=BIT},
            </if>
            <if test="ext1 != null">
                #{ext1,jdbcType=INTEGER},
            </if>
            <if test="ext2 != null">
                #{ext2,jdbcType=INTEGER},
            </if>
            <if test="ext3 != null">
                #{ext3,jdbcType=VARCHAR},
            </if>
            <if test="ext4 != null">
                #{ext4,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="update" parameterType="com.heldon.entity.Authorization">
        update authorization
        set
            auth_id = #{authId,jdbcType=INTEGER},
            user_id = #{userId,jdbcType=INTEGER},
            credentials = #{credentials,jdbcType=VARCHAR},
            identifier = #{identifier,jdbcType=VARCHAR},
            identity_type = #{identityType,jdbcType=INTEGER},
            lastlogin_time = #{lastloginTime,jdbcType=TIMESTAMP},
            lastlogin_ip = #{lastloginIp,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            is_delete = #{isDelete,jdbcType=BIT},
            ext1 = #{ext1,jdbcType=INTEGER},
            ext2 = #{ext2,jdbcType=INTEGER},
            ext3 = #{ext3,jdbcType=VARCHAR},
            ext4 = #{ext4,jdbcType=VARCHAR}
        where auth_id = #{authId,jdbcType=INTEGER}
    </update>
    <update id="updateSelective" parameterType="com.heldon.entity.Authorization">
        update authorization
        <set>
            <if test="authId != null">
                auth_id = #{authId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="credentials != null">
                credentials = #{credentials,jdbcType=VARCHAR},
            </if>
            <if test="identifier != null">
                identifier = #{identifier,jdbcType=VARCHAR},
            </if>
            <if test="identityType != null">
                identity_type = #{identityType,jdbcType=INTEGER},
            </if>
            <if test="lastloginTime != null">
                lastlogin_time = #{lastloginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastloginIp != null">
                lastlogin_ip = #{lastloginIp,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=BIT},
            </if>
            <if test="ext1 != null">
                ext1 = #{ext1,jdbcType=INTEGER},
            </if>
            <if test="ext2 != null">
                ext2 = #{ext2,jdbcType=INTEGER},
            </if>
            <if test="ext3 != null">
                ext3 = #{ext3,jdbcType=VARCHAR},
            </if>
            <if test="ext4 != null">
                ext4 = #{ext4,jdbcType=VARCHAR},
            </if>
        </set>
        where auth_id = #{authId,jdbcType=INTEGER}
    </update>
    <select id="queryOne" resultMap="BaseMap" parameterType="Integer">
        select
        <include refid="BaseColumns"/>
        from authorization a
        where a.auth_id = #{authId,jdbcType=INTEGER}
    </select>
    <delete id="delete" parameterType="Integer">
        delete from authorization where auth_id = #{authId,jdbcType=INTEGER}
    </delete>
</mapper>